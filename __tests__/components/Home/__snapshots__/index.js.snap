// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing Home component renders loaded state 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Home
    getMessage={[Function]}
    loading={false}
    message="Hello from the backend!"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "fontSize": 21,
          }
        }
      >
        Hello from the backend!
      </Text>,
      "style": Object {
        "alignItems": "center",
        "backgroundColor": "#F5F5F5",
        "flex": 1,
        "justifyContent": "center",
        "paddingTop": 20,
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "accessible": true,
        "allowFontScaling": true,
        "children": "Hello from the backend!",
        "ellipsizeMode": "tail",
        "style": Object {
          "fontSize": 21,
        },
      },
      "ref": null,
      "rendered": "Hello from the backend!",
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "fontSize": 21,
            }
          }
        >
          Hello from the backend!
        </Text>,
        "style": Object {
          "alignItems": "center",
          "backgroundColor": "#F5F5F5",
          "flex": 1,
          "justifyContent": "center",
          "paddingTop": 20,
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "accessible": true,
          "allowFontScaling": true,
          "children": "Hello from the backend!",
          "ellipsizeMode": "tail",
          "style": Object {
            "fontSize": 21,
          },
        },
        "ref": null,
        "rendered": "Hello from the backend!",
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "context": Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
    },
  },
}
`;

exports[`Testing Home component renders loading state 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Home
    getMessage={[Function]}
    loading={true}
    message=""
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <ActivityIndicator
        animating={true}
        color="#999999"
        hidesWhenStopped={true}
        size="small"
        style={
          Array [
            Object {
              "height": 80,
            },
          ]
        }
      />,
      "style": Object {
        "alignItems": "center",
        "backgroundColor": "#fff",
        "flex": 1,
        "justifyContent": "center",
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "animating": true,
        "color": "#999999",
        "hidesWhenStopped": true,
        "size": "small",
        "style": Array [
          Object {
            "height": 80,
          },
        ],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <ActivityIndicator
          animating={true}
          color="#999999"
          hidesWhenStopped={true}
          size="small"
          style={
            Array [
              Object {
                "height": 80,
              },
            ]
          }
        />,
        "style": Object {
          "alignItems": "center",
          "backgroundColor": "#fff",
          "flex": 1,
          "justifyContent": "center",
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "animating": true,
          "color": "#999999",
          "hidesWhenStopped": true,
          "size": "small",
          "style": Array [
            Object {
              "height": 80,
            },
          ],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "context": Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
    },
  },
}
`;
